{"version":3,"sources":["webpack:///webpack/bootstrap cbe62ab5d201f483087c","webpack:///./js/game.js","webpack:///./js/spaceship.js","webpack:///./js/explosion.js","webpack:///./js/particle.js","webpack:///./~/get-canvas-pixel-color/dist/get-canvas-pixel-color.node.js","webpack:///./js/moon.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC7EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,2BAA2B;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;ACnCA;AACA;AACA;AACA,aAAY,uBAAuB;AACnC,aAAY,IAAI;AAChB,aAAY,IAAI;AAChB,aAAY,aAAa;AACzB;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AClCA;AACA;AACA;AACA;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,gBAAgB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cbe62ab5d201f483087c\n **/","var canvas = document.getElementById(\"game\");\nvar context = canvas.getContext(\"2d\");\nvar Spaceship = require('./spaceship.js');\nvar Moon = require('./moon.js');\n\nvar moon = new Moon(context);\nvar spaceship = new Spaceship(context, moon);\n\nfunction draw() {\n    context.beginPath();\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.fillStyle = \"black\";\n    context.fill();\n    context.closePath();\n    context.beginPath();\n    if (spaceship.spaceship.gameOver === true) {\n      debugger;\n      renderGameOver();\n    }\n    moon.drawMoon();\n    drawFuel();\n    spaceship.updateSpaceship();\n    spaceship.drawSpaceship();\n    requestAnimationFrame(draw);\n}\n\nfunction restartPlay() {\n  cancelAnimationFrame(draw);\n  draw();\n}\n\nfunction drawFuel() {\n  context.beginPath();\n  context.fillStyle = \"rgb(224,224,224)\";\n  context.fillText(\"Fuel: \" + spaceship.spaceship.fuel, 10, 10);\n  context.closePath();\n}\n\nfunction renderGameOver() {\n  context.beginPath();\n  context.fillStyle = \"rgb(224,224,224)\";\n  context.textAlign = \"center\";\n  context.font = \"30px Arial\";\n  context.fillText(\"Game Over! You Lose\", 500, 200);\n  context.closePath();\n}\n\nfunction keyLetGo(event) {\n    switch(event.keyCode) {\n        case 37:\n            spaceship.spaceship.rotatingLeft = false;\n            break;\n        case 39:\n            spaceship.spaceship.rotatingRight = false;\n            break;\n        case 38:\n            spaceship.spaceship.engineOn = false;\n            break;\n    }\n}\ndocument.addEventListener('keyup', keyLetGo);\n\nfunction keyPressed(event) {\n    switch(event.keyCode) {\n        case 37:\n            spaceship.spaceship.rotatingLeft = true;\n            break;\n        case 39:\n            spaceship.spaceship.rotatingRight = true;\n            break;\n        case 38:\n            spaceship.spaceship.engineOn = true;\n            break;\n    }\n}\ndocument.addEventListener('keydown', keyPressed);\n\ndraw();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/game.js\n ** module id = 0\n ** module chunks = 0\n **/","var Explosion = require('./explosion.js');\nvar explosion = new Explosion();\nvar getCanvasPixelColor = require('get-canvas-pixel-color');\n\nvar Spaceship = function(context, moon) {\n  this.context = context;\n  this.moon = moon;\n  this.spaceship = {\n    color: \"white\",\n    width: 4,\n    height: 11,\n    position: {x: 20, y: 20},\n    velocity: {x: -1.2, y: 0},\n    angle: Math.PI / 2,\n    engineOn: false,\n    rotatingLeft: false,\n    rotatingRight: false,\n    gameOver: false,\n    fuel: 500\n  };\n};\n\nSpaceship.prototype.drawSpaceship = function() {\n    var spaceship = this.spaceship;\n    var context = this.context;\n    var color = getCanvasPixelColor(context, spaceship.position.x, spaceship.position.y);\n    if (spaceship.fuel <= 0) {\n      explosion.updateExplosion(10, context);\n      this.explode();\n    } else if (color.rgb === \"rgb(255,255,255)\") {\n      explosion.updateExplosion(10, context);\n      this.explode();\n    } else if (color.rgb === \"rgb(255,0,0)\") {\n      this.land();\n    } else {\n      context.save();\n      this.buildRect();\n    }\n\n    if(spaceship.engineOn) {\n      this.flameOn();\n    }\n    context.restore();\n};\n\nSpaceship.prototype.explode = function() {\n  var spaceship = this.spaceship;\n  spaceship.gameOver = true;\n  spaceship.velocity.x = 0;\n  spaceship.velocity.y = 0;\n  explosion.createExplosion(spaceship.position.x, spaceship.position.y, spaceship.color);\n  explosion.createExplosion(spaceship.position.x, spaceship.position.y, \"#E3701A\");\n};\n\nSpaceship.prototype.buildRect = function() {\n  var spaceship = this.spaceship;\n  var context = this.context;\n  context.beginPath();\n  context.translate(spaceship.position.x, spaceship.position.y);\n  context.rotate(spaceship.angle);\n  context.rect(spaceship.width * -0.5, spaceship.height * -0.5, spaceship.width, spaceship.height);\n  context.fillStyle = spaceship.color;\n  context.fill();\n  context.closePath();\n};\n\nSpaceship.prototype.land = function() {\n  var spaceship = this.spaceship;\n  spaceship.velocity.x = 0;\n  spaceship.velocity.y = 0;\n  spaceship.angle = 2 * Math.PI;\n  this.buildRect();\n};\n\nSpaceship.prototype.assessLanding = function() {\n\n};\n\nSpaceship.prototype.flameOn = function() {\n  var spaceship = this.spaceship;\n  var context = this.context;\n  if (spaceship.fuel > 0) {\n    spaceship.fuel -= 1;\n  }\n  context.beginPath();\n  context.moveTo(spaceship.width * -0.5, spaceship.height * 0.5);\n  context.lineTo(spaceship.width * 0.5, spaceship.height * 0.5);\n  context.lineTo(0, spaceship.height * 0.5 + Math.random() * 10);\n  context.lineTo(spaceship.width * -0.5, spaceship.height * 0.5);\n  context.closePath();\n  context.fillStyle = \"white\";\n  context.fill();\n};\n\nSpaceship.prototype.updateSpaceship = function() {\n  var spaceship = this.spaceship;\n  spaceship.position.x -= spaceship.velocity.x;\n  spaceship.position.y -= spaceship.velocity.y;\n\n  if (spaceship.rotatingRight) {\n      spaceship.angle += Math.PI / 180 + 0.02;\n  } else if (spaceship.rotatingLeft) {\n      spaceship.angle -= Math.PI / 180 + 0.02;\n  }\n\n  if (spaceship.engineOn) {\n      spaceship.velocity.x += 0.0035 * Math.sin(-spaceship.angle);\n      spaceship.velocity.y += 0.0035 * Math.cos(spaceship.angle);\n  }\n  spaceship.velocity.y -= 0.0009;\n};\n\n  module.exports = Spaceship;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/spaceship.js\n ** module id = 1\n ** module chunks = 0\n **/","var Particle = require('./particle.js');\nvar randomFloat = function(min, max) {\n\treturn min + Math.random()*(max-min);\n};\n\nvar Explosion = function() {\n  this.particles = [];\n};\n\nExplosion.prototype.createExplosion = function(x, y, color) {\n\tvar minSize = 10;\n\tvar maxSize = 30;\n\tvar count = 10;\n\tvar minSpeed = 60.0;\n\tvar maxSpeed = 200.0;\n\tvar minScaleSpeed = 1.0;\n\tvar maxScaleSpeed = 4.0;\n\n\tfor (var angle=0; angle<360; angle += Math.round(360/count))\n\t{\n\t\tvar particle = new Particle();\n\n\t\tparticle.x = x;\n\t\tparticle.y = y;\n\n\t\tparticle.radius = randomFloat(minSize, maxSize);\n\n\t\tparticle.color = color;\n\n\t\tparticle.scaleSpeed = randomFloat(minScaleSpeed, maxScaleSpeed);\n\n\t\tvar speed = randomFloat(minSpeed, maxSpeed);\n\n\t\tparticle.velocityX = speed * Math.cos(angle * Math.PI / 180.0);\n\t\tparticle.velocityY = speed * Math.sin(angle * Math.PI / 180.0);\n\n\t\tthis.particles.push(particle);\n\t}\n};\n\nExplosion.prototype.updateExplosion = function(frameDelay, context) {\n\tfor (var i=0; i < this.particles.length; i++) {\n\t\tvar particle = this.particles[i];\n\n\t\tparticle.updateParticle(frameDelay);\n\t\tparticle.drawParticle(context);\n\t}\n};\n\nmodule.exports = Explosion;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/explosion.js\n ** module id = 2\n ** module chunks = 0\n **/","var Particle = function() {\n\tthis.scale = 1.0;\n\tthis.x = 0;\n\tthis.y = 0;\n\tthis.radius = 20;\n\tthis.color = \"white\";\n\tthis.velocityX = 0;\n\tthis.velocityY = 0;\n\tthis.scaleSpeed = 0.5;\n};\n\n\tParticle.prototype.updateParticle = function(ms) {\n\t\tthis.scale -= this.scaleSpeed * ms / 1000.0;\n\t\tif (this.scale <= 0) {\n\t\t\tthis.scale = 0;\n\t\t}\n\t\tthis.x += this.velocityX * ms/1000.0;\n\t\tthis.y += this.velocityY * ms/1000.0;\n\t};\n\n\tParticle.prototype.drawParticle = function(context) {\n\t\tcontext.save();\n\n\t\tcontext.beginPath();\n    context.translate(this.x, this.y);\n    context.scale(this.scale, this.scale);\n\t\tcontext.arc(0, 0, this.radius, 0, Math.PI*2, true);\n    context.fillStyle = this.color;\n    context.fill();\n\t\tcontext.closePath();\n\n\t\tcontext.restore();\n\t};\n\n\nmodule.exports = Particle;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/particle.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n/**\n * getCanvasPixelColor\n * @param  {canvas element|context} ctx  The canvas from which to take the color\n * @param  {int} x                       The x coordinate of the pixel to read\n * @param  {int} y                       The y coordinate of the pixel to read\n * @return {array/object}                The rgb values of the read pixel\n */\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nexports['default'] = function (ctx, x, y) {\n\t// if it's not a context, it's probably a canvas element\n\tif (!ctx.getImageData) {\n\t\tctx = ctx.getContext('2d');\n\t}\n\n\t// extract the pixel data from the canvas\n\tvar pixel = ctx.getImageData(x, y, 1, 1).data;\n\n\t// set each color property\n\tpixel.r = pixel[0];\n\tpixel.b = pixel[1];\n\tpixel.g = pixel[2];\n\tpixel.a = pixel[3];\n\n\t// convenience CSS strings\n\tpixel.rgb = 'rgb(' + pixel.r + ',' + pixel.g + ',' + pixel.b + ')';\n\tpixel.rgba = 'rgb(' + pixel.r + ',' + pixel.g + ',' + pixel.b + ',' + pixel.a + ')';\n\n\treturn pixel;\n};\n\nmodule.exports = exports['default'];\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/get-canvas-pixel-color/dist/get-canvas-pixel-color.node.js\n ** module id = 4\n ** module chunks = 0\n **/","var Moon = function(context) {\n  this.context = context;\n  this.moon = {\n    landingPads: [],\n    moonStart: {x: 0, y: 400},\n    coords: [\n      [50, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [150, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      [225, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [275, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [410, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [460, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [580, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      [640, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [730, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [770, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      [840, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [920, Math.floor(Math.random() * (600 - 300 + 1)) + 300],\n      \"landing\",\n      [950, Math.floor(Math.random() * (600 - 300 + 1)) + 300]\n    ],\n    moonEnd: {x: 1000, y: 400},\n    moonDrawn: false\n  };\n};\n\nMoon.prototype.drawMoon = function() {\n  var context = this.context;\n  var moon = this.moon;\n\n  context.save();\n  context.beginPath();\n  context.moveTo(moon.moonStart.x, moon.moonStart.y);\n  for (var i = 0; i < this.moon.coords.length; i++) {\n    if (this.moon.coords[i] !== \"landing\") {\n      context.lineTo(this.moon.coords[i][0], this.moon.coords[i][1]);\n    }\n    if (this.moon.coords[i + 1] === \"landing\") {\n      context.strokeStyle = \"rgb(255,255,255)\";\n      context.lineWidth = 2;\n      context.stroke();\n      this.drawLandingZone([this.moon.coords[i][0] + 15, this.moon.coords[i][1]]);\n    }\n  }\n  context.lineTo(moon.moonEnd.x, moon.moonEnd.y);\n  context.lineWidth = 2;\n  context.strokeStyle = \"rgb(255,255,255)\";\n  context.stroke();\n  context.closePath();\n};\n\nMoon.prototype.drawLandingZone = function(endCoord) {\n  var context = this.context;\n  context.beginPath();\n  context.moveTo(endCoord[0] - 15, endCoord[1]);\n  context.lineTo(endCoord[0], endCoord[1]);\n  context.strokeStyle = \"rgb(255,0,0)\";\n  context.lineWidth = 2;\n  context.stroke();\n  context.beginPath();\n  context.moveTo(endCoord[0], endCoord[1]);\n};\n\nmodule.exports = Moon;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/moon.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}